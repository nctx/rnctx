% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modgraph.R
\name{set_vertex_attributes}
\alias{set_vertex_attributes}
\title{Set attributes for all vertices}
\usage{
set_vertex_attributes(g, name, attributes)
}
\arguments{
\item{g}{A nctx graph}

\item{name}{Name of the attribute}

\item{attributes}{The list of attribute values for the nctx graph.}
}
\description{
This sets an attribute list for all vertices of the graph.
}
\details{
Setting attributes for vertices is mainly used to export them to files, e.g. using \code{\link{save_graph}}.

Association between attributes and vertices is via the position in the attribute list, i.e. attributes for the 4th vertex are taken from the 4th position of the attribute list.

Note that setting attribute lists with an existing name will override previous attribute lists.
}
\examples{
library(RUnit)
library(nctx)
file <- system.file("extdata", "bcde.ctx.dir.graphml", package="nctx")
g <- load_graph(file, directed = TRUE)
prop_names <- get_vertex_attribute_names(g)
checkTrue(all(prop_names \%in\% c("context","distance_to_A","distance_to_B","distance_to_C","distance_to_D","distance_to_E","distance_to_F","distance_to_G","distance_to_H","distance_to_I","distance_to_J","name")))

chr_test <- tail(letters, n = num_vertices(g))
set_vertex_attributes(g, "chr_test", chr_test)

bool_test <- sample(c(TRUE, FALSE), num_vertices(g), TRUE)
set_vertex_attributes(g, "bool_test", bool_test)

int_test <- as.integer(sample(c(1,2,3,4,5), num_vertices(g), replace = TRUE))
set_vertex_attributes(g, "int_test", int_test)
save_graph(g, file = "bla.graphml")


g2 <- load_graph("bla.graphml", directed = TRUE)

checkTrue(all(get_vertex_attribute_names(g2) \%in\% c("bool_test", "chr_test", "int_test", "context","distance_to_A","distance_to_B","distance_to_C","distance_to_D","distance_to_E","distance_to_F","distance_to_G","distance_to_H","distance_to_I","distance_to_J", "name")))

bool_loaded <- as.logical(get_vertex_attributes(g2, "bool_test"))
checkEquals(bool_loaded,bool_test)

int_loaded <- get_vertex_attributes(g2, "int_test")
checkTrue(is.integer(int_loaded))
checkEquals(int_loaded, int_test)

chr_loaded <- get_vertex_attributes(g2, "chr_test")
checkTrue(is.character(chr_loaded))
checkEquals(chr_loaded, chr_test)
}
\seealso{
\code{\link{get_vertex_attribute_names}}
}
